name: Direct download ➜ rename to .mp4 ➜ upload to od

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: '直链（可多行，每行一个 URL）'
        required: true
      dest_path:
        description: '上传到 od: 的子目录；留空 = 根目录'
        required: true
        default: ''

jobs:
  download_and_upload:
    runs-on: ubuntu-latest

    env:
      # rclone 进度 & 性能参数
      RCLONE_STATS: 1s
      TRANSFERS:   32
      CHECKERS:    32
      BUFFER_SIZE: 1G
      THREAD_STREAMS: 8
      THREAD_CUTOFF: 16M
      DRIVE_CHUNK_SIZE: 256M
      ONEDRIVE_CHUNK_SIZE: 60M

    steps:
    # ---------- 0. 检出仓库（可删除） ----------
    - name: Checkout
      uses: actions/checkout@v4

    # ---------- 1. 安装 aria2 ----------
    - name: Install aria2
      run: |
        sudo apt-get update
        sudo apt-get install -y aria2

    # ---------- 2. 下载直链 ----------
    - name: Download file(s)
      run: |
        mkdir -p downloads
        printf '%s\n' "${{ github.event.inputs.file_url }}" > /tmp/urls.txt
        echo "⬇️  Download list:" && cat /tmp/urls.txt

        aria2c --continue=true \
               --max-connection-per-server=16 \
               --split=16 \
               --dir=downloads \
               --input-file=/tmp/urls.txt

        echo "🎉 Downloads done" && ls -lh downloads

    # ---------- 3. 批量改后缀为 .mp4 ----------
    - name: Rename files to .mp4 (no re-encode)
      run: |
        cd downloads
        shopt -s nullglob
        for f in *; do
          [[ -d "$f" ]] && continue          # 跳过目录
          [[ "$f" == *.mp4 ]] && continue    # 原本就是 mp4 的跳过
          mv -- "$f" "${f%.*}.mp4"
          echo "📝 $f ➜ ${f%.*}.mp4"
        done
        echo "Finished renaming:" && ls -lh

    # ---------- 4. 安装并加载 rclone（纯文本 config） ----------
    - name: Setup rclone (plain text)
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: ${{ secrets.RCLONE_CONFIG }}
        disable_base64: true

    # ---------- 5. 上传到 OneDrive (od:) ----------
    - name: Upload via rclone
      run: |
        SRC_DIR="downloads"
        DEST_DIR="od:${{ github.event.inputs.dest_path }}"
        echo "📤 Copying $SRC_DIR ➜ $DEST_DIR"

        rclone copy "$SRC_DIR" "$DEST_DIR" \
          --transfers             "$TRANSFERS" \
          --checkers              "$CHECKERS" \
          --buffer-size           "$BUFFER_SIZE" \
          --multi-thread-streams  "$THREAD_STREAMS" \
          --multi-thread-cutoff   "$THREAD_CUTOFF" \
          --drive-chunk-size      "$DRIVE_CHUNK_SIZE" \
          --onedrive-chunk-size   "$ONEDRIVE_CHUNK_SIZE" \
          --fast-list \
          --progress \
          --stats=$RCLONE_STATS
